# Stage 1: Build the frontend application (Vite/React)
FROM node:18-alpine AS builder

WORKDIR /app

# Copiar package.json e package-lock.json do diretório raiz do projeto (mapa-dna/)
COPY package*.json ./

# Instalar dependências
RUN npm ci

# Copiar código fonte do diretório raiz do projeto (mapa-dna/)
# ATENÇÃO: Se tiver .dockerignore, certifique-se de que não exclui arquivos essenciais.
COPY . .

# Build da aplicação (assumindo que 'npm run build' cria uma pasta 'dist')
RUN npm run build

# Stage 2: Serve with Nginx
FROM nginx:alpine

# Instale curl e iputils-ping para o healthcheck e depuração
RUN apk add --no-cache curl iputils-ping

# Copiar configuração customizada do nginx para substituir a padrão
COPY ./nginx-traefik.conf /etc/nginx/nginx.conf

# Copiar arquivos buildados do estágio 'builder' para a raiz do Nginx
# Assumindo que o build do seu Vite gera os arquivos estáticos na pasta 'dist' dentro de /app
COPY --from=builder /app/dist /usr/share/nginx/html

# Expor porta 80 (porta interna do container Nginx)
EXPOSE 80

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"]