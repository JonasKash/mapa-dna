#!/bin/bash

# Mapa da Grana - Script de Instala칞칚o
# Este script automatiza a instala칞칚o do projeto em VPS

set -e

echo "游댩 Mapa da Grana - Instala칞칚o Automatizada"
echo "=========================================="

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun칞칚o para imprimir mensagens coloridas
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Verificar se 칠 root
if [ "$EUID" -eq 0 ]; then
    print_error "N칚o execute este script como root!"
    exit 1
fi

# Verificar sistema operacional
if [[ "$OSTYPE" != "linux-gnu"* ]]; then
    print_error "Este script 칠 apenas para sistemas Linux"
    exit 1
fi

print_status "Verificando depend칡ncias..."

# Verificar Docker
if ! command -v docker &> /dev/null; then
    print_status "Instalando Docker..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    print_success "Docker instalado com sucesso"
    print_warning "Voc칡 precisa fazer logout e login novamente para usar Docker sem sudo"
else
    print_success "Docker j치 est치 instalado"
fi

# Verificar Docker Compose
if ! command -v docker-compose &> /dev/null; then
    print_status "Instalando Docker Compose..."
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    print_success "Docker Compose instalado com sucesso"
else
    print_success "Docker Compose j치 est치 instalado"
fi

# Verificar Git
if ! command -v git &> /dev/null; then
    print_status "Instalando Git..."
    sudo apt update
    sudo apt install -y git
    print_success "Git instalado com sucesso"
else
    print_success "Git j치 est치 instalado"
fi

# Verificar se o projeto j치 existe
if [ -d "mapa-dna" ]; then
    print_warning "Diret칩rio 'mapa-dna' j치 existe"
    read -p "Deseja remover e reinstalar? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf mapa-dna
        print_success "Diret칩rio removido"
    else
        print_status "Continuando com instala칞칚o no diret칩rio existente..."
        cd mapa-dna
    fi
else
    print_status "Clonando reposit칩rio..."
    git clone https://github.com/JonasKash/mapa-dna.git
    cd mapa-dna
    print_success "Reposit칩rio clonado com sucesso"
fi

# Criar arquivo .env se n칚o existir
if [ ! -f ".env" ]; then
    print_status "Criando arquivo .env..."
    cp env.example .env
    print_success "Arquivo .env criado"
    print_warning "Edite o arquivo .env com suas configura칞칫es antes de continuar"
    read -p "Pressione Enter para continuar ap칩s editar o .env..."
else
    print_success "Arquivo .env j치 existe"
fi

# Verificar se Docker est치 rodando
if ! docker info &> /dev/null; then
    print_error "Docker n칚o est치 rodando. Inicie o Docker e tente novamente."
    exit 1
fi

# Build e start dos containers
print_status "Construindo e iniciando containers..."
docker-compose -f docker-compose.prod.yml up -d --build

# Aguardar containers iniciarem
print_status "Aguardando containers iniciarem..."
sleep 10

# Verificar status dos containers
print_status "Verificando status dos containers..."
docker-compose -f docker-compose.prod.yml ps

# Verificar se os servi칞os est칚o rodando
print_status "Verificando se os servi칞os est칚o acess칤veis..."

# Verificar backend
if curl -f http://localhost:3002/api/health &> /dev/null; then
    print_success "Backend est치 rodando em http://localhost:3002"
else
    print_error "Backend n칚o est치 respondendo"
fi

# Verificar frontend
if curl -f http://localhost:3000 &> /dev/null; then
    print_success "Frontend est치 rodando em http://localhost:3000"
else
    print_error "Frontend n칚o est치 respondendo"
fi

print_success "Instala칞칚o conclu칤da!"
echo
echo "游꿀 Mapa da Grana est치 rodando!"
echo "Frontend: http://localhost:3000"
echo "Backend: http://localhost:3002"
echo
echo "游늶 Comandos 칰teis:"
echo "  Ver logs: docker-compose -f docker-compose.prod.yml logs -f"
echo "  Parar: docker-compose -f docker-compose.prod.yml down"
echo "  Reiniciar: docker-compose -f docker-compose.prod.yml restart"
echo
echo "游닀 Para mais informa칞칫es, consulte o README.md"
